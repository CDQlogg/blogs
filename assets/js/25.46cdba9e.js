(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{525:function(t,s,a){"use strict";a.r(s);var r=a(3),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"input表单type属性值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#input表单type属性值"}},[t._v("#")]),t._v(" input表单type属性值")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email"')]),t._v(" 限制用户输入必须为Email类型\n\ntype"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url"')]),t._v("          限制用户输入必须为"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),t._v("类型\n\ntype"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"date"')]),t._v("     限制用户输入必须为日期类型\n\ntype"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datetime"')]),t._v(" 显示完整日期 含时区\n\ntype"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datetime-local"')]),t._v(" 显示完整日期 不含时区\n\ntype"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("    限制用户输入必须为时间类型\n\ntype"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"month"')]),t._v("  限制用户输入必须为月类型\n\ntype"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"week"')]),t._v("    限制用户输入必须为周类型\n\ntype"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),t._v(" 限制用户输入必须为数字类型\n\ntype"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"range"')]),t._v("    生成一个滑动条\n\ntype"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"search"')]),t._v("  具有搜索意义的表单results"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"n"')]),t._v("属性\n\ntype"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"color"')]),t._v("    生成一个颜色选择表单\n\ntype"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tel"')]),t._v("    显示电话号码\n\n")])])]),s("h2",{attrs:{id:"input-类型-date-pickers-日期选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#input-类型-date-pickers-日期选择器"}},[t._v("#")]),t._v(" Input 类型 - Date Pickers（日期选择器）")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML5")]),t._v(" 拥有多个可供选取日期和时间的新输入类型：\n\ndate 选取日、月、年\n\nmonth 选取月、年\n\nweek  选取周和年\n\ntime  选取时间（小时和分钟）\n")])])]),s("h2",{attrs:{id:"html5新增表单属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html5新增表单属性"}},[t._v("#")]),t._v(" HTML5新增表单属性")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("required")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" required内容不能为空\n\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("placeholder")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 表单提示信息\n\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("autofocus")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("自动聚焦\n\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pattern")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 正则表达式  输入的内容必须匹配到指定正则范围\n\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("autocomplete")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("是否保存用户输入值\n\n\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("formaction")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 在submit里定义提交地址\n\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("datalist")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 输入框选择列表配合list使用 list值为datalist的id值\n\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("output")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 计算或脚本输出\n")])])]),s("h2",{attrs:{id:"表单验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表单验证"}},[t._v("#")]),t._v(" 表单验证")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("validity对象，通过下面的valid可以查看验证是否通过，如果八种验证都返回"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("一种验证失败返回"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\noText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"invalid"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("fn1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 阻止默认事件\n\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("valueMissing")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 当输入值为空的时候，返回"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("typeMismatch")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 控件值与预期不吻合，返回"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("patternMismatch")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 输入值不满足pattern正则，返回"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n\ncusomError\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);